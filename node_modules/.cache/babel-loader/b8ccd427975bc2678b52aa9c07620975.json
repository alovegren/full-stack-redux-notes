{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const generateId = () => Number((Math.random() * 10000000).toFixed(0));\nconst noteSlice = createSlice({\n  name: 'notes',\n  initialState: [],\n  reducers: {\n    createNote(state, action) {\n      const content = action.payload;\n      state.push({\n        content,\n        important: false,\n        id: generateId()\n      });\n    }\n\n  },\n\n  toggleImportanceOf(state, action) {\n    const id = action.payload;\n    const noteToChange = state.find(note => note.id === id);\n    const changedNote = { ...noteToChange,\n      important: !noteToChange.important\n    };\n    return state.map(note => note.id === id ? changedNote : note);\n  },\n\n  appendNote(state, action) {\n    state.push(action.payload);\n  },\n\n  setNotes(_state, action) {\n    return action.payload;\n  }\n\n});\nexport const {\n  createNote,\n  toggleImportanceOf,\n  appendNote\n} = noteSlice.actions;\nexport default noteSlice.reducer;","map":{"version":3,"sources":["/home/missy/full_stack_open_course/part6/simple-notes/src/reducers/noteReducer.js"],"names":["createSlice","generateId","Number","Math","random","toFixed","noteSlice","name","initialState","reducers","createNote","state","action","content","payload","push","important","id","toggleImportanceOf","noteToChange","find","note","changedNote","map","appendNote","setNotes","_state","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAMC,MAAM,CAAC,CAACC,IAAI,CAACC,MAAL,KAAgB,QAAjB,EAA2BC,OAA3B,CAAmC,CAAnC,CAAD,CAA/B;AAEP,MAAMC,SAAS,GAAGN,WAAW,CAAC;AAC5BO,EAAAA,IAAI,EAAE,OADsB;AAE5BC,EAAAA,YAAY,EAAE,EAFc;AAI5BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACxB,YAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;AACAH,MAAAA,KAAK,CAACI,IAAN,CAAW;AACTF,QAAAA,OADS;AAETG,QAAAA,SAAS,EAAE,KAFF;AAGTC,QAAAA,EAAE,EAAEhB,UAAU;AAHL,OAAX;AAKD;;AARO,GAJkB;;AAe5BiB,EAAAA,kBAAkB,CAACP,KAAD,EAAQC,MAAR,EAAgB;AAChC,UAAMK,EAAE,GAAGL,MAAM,CAACE,OAAlB;AACA,UAAMK,YAAY,GAAGR,KAAK,CAACS,IAAN,CAAWC,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYA,EAA/B,CAArB;AAEA,UAAMK,WAAW,GAAG,EAClB,GAAGH,YADe;AAElBH,MAAAA,SAAS,EAAE,CAACG,YAAY,CAACH;AAFP,KAApB;AAKA,WAAOL,KAAK,CAACY,GAAN,CAAUF,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYA,EAAZ,GAAiBK,WAAjB,GAA+BD,IAAjD,CAAP;AACD,GAzB2B;;AA2B5BG,EAAAA,UAAU,CAACb,KAAD,EAAQC,MAAR,EAAgB;AACxBD,IAAAA,KAAK,CAACI,IAAN,CAAWH,MAAM,CAACE,OAAlB;AACD,GA7B2B;;AA+B5BW,EAAAA,QAAQ,CAACC,MAAD,EAASd,MAAT,EAAiB;AACvB,WAAOA,MAAM,CAACE,OAAd;AACD;;AAjC2B,CAAD,CAA7B;AAoCA,OAAO,MAAM;AAAEJ,EAAAA,UAAF;AAAcQ,EAAAA,kBAAd;AAAkCM,EAAAA;AAAlC,IAAiDlB,SAAS,CAACqB,OAAjE;AACP,eAAerB,SAAS,CAACsB,OAAzB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const generateId = () => Number((Math.random() * 10000000).toFixed(0));\n\nconst noteSlice = createSlice({\n  name: 'notes',\n  initialState: [],\n\n  reducers: {\n    createNote(state, action) {\n      const content = action.payload;\n      state.push({\n        content,\n        important: false,\n        id: generateId(),\n      });\n    },\n  },\n\n  toggleImportanceOf(state, action) {\n    const id = action.payload;\n    const noteToChange = state.find(note => note.id === id)\n    \n    const changedNote = {\n      ...noteToChange,\n      important: !noteToChange.important,\n    }\n    \n    return state.map(note => note.id === id ? changedNote : note);\n  },\n\n  appendNote(state, action) {\n    state.push(action.payload);\n  },\n\n  setNotes(_state, action) {\n    return action.payload;\n  }\n});\n\nexport const { createNote, toggleImportanceOf, appendNote } = noteSlice.actions;\nexport default noteSlice.reducer;"]},"metadata":{},"sourceType":"module"}