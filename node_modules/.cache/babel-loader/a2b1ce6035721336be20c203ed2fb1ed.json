{"ast":null,"code":"var _jsxFileName = \"/home/missy/full_stack_open_course/part6/simple-notes/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toggleImportanceOf } from './reducers/noteReducer';\nimport NewNote from './components/NewNote'; // dispatch({\n//   type: 'NEW_NOTE',\n//   data: {\n//     content: 'the app state is now in a redux store',\n//     important: true,\n//     id: 1,\n//   },\n// });\n// dispatch({\n//   type: 'NEW_NOTE',\n//   data: {\n//     content: 'we pass the dispatch action via the type attribute',\n//     important: true,\n//     id: 2,\n//   },\n// });\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const notes = useSelector(state => state);\n\n  const toggleImportance = id => {\n    dispatch(toggleImportanceOf(id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NewNote, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => toggleImportance(note.id),\n        children: [note.content, \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: note.important ? 'important' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 28\n        }, this)]\n      }, note.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"E+izF8dZ+qIXvXLmwmZPZjv7l3I=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/missy/full_stack_open_course/part6/simple-notes/src/App.js"],"names":["useSelector","useDispatch","toggleImportanceOf","NewNote","App","dispatch","notes","state","toggleImportance","id","map","note","content","important"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,kBAAT,QAAmC,wBAAnC;AACA,OAAOC,OAAP,MAAoB,sBAApB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,KAAK,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAV,CAAzB;;AAEA,QAAMC,gBAAgB,GAAGC,EAAE,IAAI;AAC7BJ,IAAAA,QAAQ,CAACH,kBAAkB,CAACO,EAAD,CAAnB,CAAR;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGH,KAAK,CAACI,GAAN,CAAUC,IAAI,iBACb;AAEE,QAAA,OAAO,EAAE,MAAMH,gBAAgB,CAACG,IAAI,CAACF,EAAN,CAFjC;AAAA,mBAIGE,IAAI,CAACC,OAJR,oBAIiB;AAAA,oBAASD,IAAI,CAACE,SAAL,GAAiB,WAAjB,GAA+B;AAAxC;AAAA;AAAA;AAAA;AAAA,gBAJjB;AAAA,SACOF,IAAI,CAACF,EADZ;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAvBD;;GAAML,G;UACaH,W,EACHD,W;;;KAFVI,G;AAyBN,eAAeA,GAAf","sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\nimport { toggleImportanceOf } from './reducers/noteReducer';\nimport NewNote from './components/NewNote';\n\n// dispatch({\n//   type: 'NEW_NOTE',\n//   data: {\n//     content: 'the app state is now in a redux store',\n//     important: true,\n//     id: 1,\n//   },\n// });\n\n// dispatch({\n//   type: 'NEW_NOTE',\n//   data: {\n//     content: 'we pass the dispatch action via the type attribute',\n//     important: true,\n//     id: 2,\n//   },\n// });\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const notes = useSelector(state => state);\n\n  const toggleImportance = id => {\n    dispatch(toggleImportanceOf(id));\n  };\n\n  return (\n    <div>\n      <NewNote />\n      <ul>\n        {notes.map(note =>\n          <li\n            key={note.id} \n            onClick={() => toggleImportance(note.id)}\n          >\n            {note.content} <strong>{note.important ? 'important' : ''}</strong>\n          </li>\n        )}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}