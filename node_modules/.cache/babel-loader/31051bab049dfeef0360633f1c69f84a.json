{"ast":null,"code":"const initialState = [{\n  content: 'reducer defines how redux store works',\n  important: true,\n  id: 1\n}, {\n  content: 'state of store can contain any data',\n  important: false,\n  id: 2\n}];\n\nconst noteReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'NEW_NOTE':\n      return [...state, action.data];\n\n    case 'TOGGLE_IMPORTANCE':\n      const id = action.data.id;\n      const noteToChange = state.find(n => n.id === id);\n      const changedNote = { ...noteToChange,\n        important: !noteToChange.important\n      };\n      return state.map(note => note.id === id ? changedNote : note);\n\n    default:\n      return state;\n  }\n};\n\nexport const generateId = () => Number((Math.random() * 10000000).toFixed(0));\nexport const createNote = content => {\n  return {\n    type: 'NEW_NOTE',\n    data: {\n      content,\n      important: false,\n      id: generateId()\n    }\n  };\n};\nexport const toggleImportanceOf = id => {\n  return {\n    type: 'TOGGLE_IMPORTANCE',\n    data: {\n      id\n    }\n  };\n};\nexport default noteReducer;","map":{"version":3,"sources":["/home/missy/full_stack_open_course/part6/simple-notes/src/reducers/noteReducer.js"],"names":["initialState","content","important","id","noteReducer","state","action","type","data","noteToChange","find","n","changedNote","map","note","generateId","Number","Math","random","toFixed","createNote","toggleImportanceOf"],"mappings":"AAAA,MAAMA,YAAY,GAAG,CACnB;AACEC,EAAAA,OAAO,EAAE,uCADX;AAEEC,EAAAA,SAAS,EAAE,IAFb;AAGEC,EAAAA,EAAE,EAAE;AAHN,CADmB,EAMnB;AACEF,EAAAA,OAAO,EAAE,qCADX;AAEEC,EAAAA,SAAS,EAAE,KAFb;AAGEC,EAAAA,EAAE,EAAE;AAHN,CANmB,CAArB;;AAaA,MAAMC,WAAW,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,aAAO,CAAC,GAAGF,KAAJ,EAAWC,MAAM,CAACE,IAAlB,CAAP;;AACF,SAAK,mBAAL;AACE,YAAML,EAAE,GAAGG,MAAM,CAACE,IAAP,CAAYL,EAAvB;AACA,YAAMM,YAAY,GAAGJ,KAAK,CAACK,IAAN,CAAWC,CAAC,IAAIA,CAAC,CAACR,EAAF,KAASA,EAAzB,CAArB;AACA,YAAMS,WAAW,GAAG,EAClB,GAAGH,YADe;AAElBP,QAAAA,SAAS,EAAE,CAACO,YAAY,CAACP;AAFP,OAApB;AAKA,aAAOG,KAAK,CAACQ,GAAN,CAAUC,IAAI,IACnBA,IAAI,CAACX,EAAL,KAAYA,EAAZ,GAAiBS,WAAjB,GAA+BE,IAD1B,CAAP;;AAGF;AACE,aAAOT,KAAP;AAfJ;AAiBD,CAlBD;;AAoBA,OAAO,MAAMU,UAAU,GAAG,MAAMC,MAAM,CAAC,CAACC,IAAI,CAACC,MAAL,KAAgB,QAAjB,EAA2BC,OAA3B,CAAmC,CAAnC,CAAD,CAA/B;AAEP,OAAO,MAAMC,UAAU,GAAInB,OAAD,IAAa;AACrC,SAAO;AACLM,IAAAA,IAAI,EAAE,UADD;AAELC,IAAAA,IAAI,EAAE;AACJP,MAAAA,OADI;AAEJC,MAAAA,SAAS,EAAE,KAFP;AAGJC,MAAAA,EAAE,EAAEY,UAAU;AAHV;AAFD,GAAP;AAQD,CATM;AAWP,OAAO,MAAMM,kBAAkB,GAAIlB,EAAD,IAAQ;AACxC,SAAO;AACLI,IAAAA,IAAI,EAAE,mBADD;AAELC,IAAAA,IAAI,EAAE;AAAEL,MAAAA;AAAF;AAFD,GAAP;AAID,CALM;AAOP,eAAeC,WAAf","sourcesContent":["const initialState = [\n  {\n    content: 'reducer defines how redux store works',\n    important: true,\n    id: 1,\n  },\n  {\n    content: 'state of store can contain any data',\n    important: false,\n    id: 2,\n  },\n]\n\nconst noteReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'NEW_NOTE':\n      return [...state, action.data];\n    case 'TOGGLE_IMPORTANCE':\n      const id = action.data.id;\n      const noteToChange = state.find(n => n.id === id);\n      const changedNote = {\n        ...noteToChange,\n        important: !noteToChange.important\n      };\n\n      return state.map(note => (\n        note.id === id ? changedNote : note\n      ));\n    default:\n      return state;\n  }\n}\n\nexport const generateId = () => Number((Math.random() * 10000000).toFixed(0));\n\nexport const createNote = (content) => {\n  return {\n    type: 'NEW_NOTE',\n    data: {\n      content,\n      important: false,\n      id: generateId(),\n    }\n  };\n}\n\nexport const toggleImportanceOf = (id) => {\n  return {\n    type: 'TOGGLE_IMPORTANCE',\n    data: { id },\n  };\n}\n\nexport default noteReducer;"]},"metadata":{},"sourceType":"module"}