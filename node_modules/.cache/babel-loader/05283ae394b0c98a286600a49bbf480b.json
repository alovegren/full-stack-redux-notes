{"ast":null,"code":"var _jsxFileName = \"/home/missy/full_stack_open_course/part6/simple-notes/src/components/Note.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch } from 'react-redux';\nimport { toggleImportanceOf } from '../reducers/noteReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Note = (content, important, key) => {\n  _s();\n\n  const id = key;\n  const dispatch = useDispatch();\n\n  const toggleImportance = id => {\n    dispatch(toggleImportanceOf(id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    onClick: () => toggleImportance(id),\n    children: [content, \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: important ? 'important' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Note, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Note;\nexport default Note;\n\nvar _c;\n\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"sources":["/home/missy/full_stack_open_course/part6/simple-notes/src/components/Note.js"],"names":["useDispatch","toggleImportanceOf","Note","content","important","key","id","dispatch","toggleImportance"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,kBAAT,QAAmC,yBAAnC;;;AAEA,MAAMC,IAAI,GAAG,CAACC,OAAD,EAAUC,SAAV,EAAqBC,GAArB,KAA6B;AAAA;;AACxC,QAAMC,EAAE,GAAGD,GAAX;AACA,QAAME,QAAQ,GAAGP,WAAW,EAA5B;;AAEA,QAAMQ,gBAAgB,GAAGF,EAAE,IAAI;AAC7BC,IAAAA,QAAQ,CAACN,kBAAkB,CAACK,EAAD,CAAnB,CAAR;AACD,GAFD;;AAIA,sBACE;AAAI,IAAA,OAAO,EAAE,MAAME,gBAAgB,CAACF,EAAD,CAAnC;AAAA,eACGH,OADH,oBACY;AAAA,gBAASC,SAAS,GAAG,WAAH,GAAiB;AAAnC;AAAA;AAAA;AAAA;AAAA,YADZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAbD;;GAAMF,I;UAEaF,W;;;KAFbE,I;AAeN,eAAeA,IAAf","sourcesContent":["import { useDispatch } from 'react-redux';\nimport { toggleImportanceOf } from '../reducers/noteReducer';\n\nconst Note = (content, important, key) => {\n  const id = key;\n  const dispatch = useDispatch();\n\n  const toggleImportance = id => {\n    dispatch(toggleImportanceOf(id));\n  };\n\n  return (\n    <li onClick={() => toggleImportance(id)}>\n      {content} <strong>{important ? 'important' : ''}</strong>\n    </li>\n  )\n}\n\nexport default Note;"]},"metadata":{},"sourceType":"module"}