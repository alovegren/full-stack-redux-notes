{"ast":null,"code":"const noteReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'NEW_NOTE':\n      return [...state, action.data];\n\n    case 'TOGGLE_IMPORTANCE':\n      const id = action.data.id;\n      const noteToChange = state.find(n => n.id === id);\n      const changedNote = { ...noteToChange,\n        important: !noteToChange.important\n      };\n      return state.map(note => note.id === id ? changedNote : note);\n\n    default:\n      return state;\n  }\n};\n\nexport const generateId = () => Number((Math.random() * 10000000).toFixed(0));\nexport const createNote = content => {\n  return {\n    type: 'NEW_NOTE',\n    data: {\n      content,\n      important: false,\n      id: generateId()\n    }\n  };\n};\nexport const toggleImportanceOf = id => {\n  return {\n    type: 'TOGGLE_IMPORTANCE',\n    data: {\n      id\n    }\n  };\n};\nexport default noteReducer;","map":{"version":3,"sources":["/home/missy/full_stack_open_course/part6/simple-notes/src/reducers/noteReducer.js"],"names":["noteReducer","state","action","type","data","id","noteToChange","find","n","changedNote","important","map","note","generateId","Number","Math","random","toFixed","createNote","content","toggleImportanceOf"],"mappings":"AAAA,MAAMA,WAAW,GAAG,YAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AAC1C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,aAAO,CAAC,GAAGF,KAAJ,EAAWC,MAAM,CAACE,IAAlB,CAAP;;AACF,SAAK,mBAAL;AACE,YAAMC,EAAE,GAAGH,MAAM,CAACE,IAAP,CAAYC,EAAvB;AACA,YAAMC,YAAY,GAAGL,KAAK,CAACM,IAAN,CAAWC,CAAC,IAAIA,CAAC,CAACH,EAAF,KAASA,EAAzB,CAArB;AACA,YAAMI,WAAW,GAAG,EAClB,GAAGH,YADe;AAElBI,QAAAA,SAAS,EAAE,CAACJ,YAAY,CAACI;AAFP,OAApB;AAKA,aAAOT,KAAK,CAACU,GAAN,CAAUC,IAAI,IACnBA,IAAI,CAACP,EAAL,KAAYA,EAAZ,GAAiBI,WAAjB,GAA+BG,IAD1B,CAAP;;AAGF;AACE,aAAOX,KAAP;AAfJ;AAiBD,CAlBD;;AAoBA,OAAO,MAAMY,UAAU,GAAG,MAAMC,MAAM,CAAC,CAACC,IAAI,CAACC,MAAL,KAAgB,QAAjB,EAA2BC,OAA3B,CAAmC,CAAnC,CAAD,CAA/B;AAEP,OAAO,MAAMC,UAAU,GAAIC,OAAD,IAAa;AACrC,SAAO;AACLhB,IAAAA,IAAI,EAAE,UADD;AAELC,IAAAA,IAAI,EAAE;AACJe,MAAAA,OADI;AAEJT,MAAAA,SAAS,EAAE,KAFP;AAGJL,MAAAA,EAAE,EAAEQ,UAAU;AAHV;AAFD,GAAP;AAQD,CATM;AAWP,OAAO,MAAMO,kBAAkB,GAAIf,EAAD,IAAQ;AACxC,SAAO;AACLF,IAAAA,IAAI,EAAE,mBADD;AAELC,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF;AAFD,GAAP;AAID,CALM;AAOP,eAAeL,WAAf","sourcesContent":["const noteReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'NEW_NOTE':\n      return [...state, action.data];\n    case 'TOGGLE_IMPORTANCE':\n      const id = action.data.id;\n      const noteToChange = state.find(n => n.id === id);\n      const changedNote = {\n        ...noteToChange,\n        important: !noteToChange.important\n      };\n\n      return state.map(note => (\n        note.id === id ? changedNote : note\n      ));\n    default:\n      return state;\n  }\n}\n\nexport const generateId = () => Number((Math.random() * 10000000).toFixed(0));\n\nexport const createNote = (content) => {\n  return {\n    type: 'NEW_NOTE',\n    data: {\n      content,\n      important: false,\n      id: generateId(),\n    }\n  };\n}\n\nexport const toggleImportanceOf = (id) => {\n  return {\n    type: 'TOGGLE_IMPORTANCE',\n    data: { id },\n  };\n}\n\nexport default noteReducer;"]},"metadata":{},"sourceType":"module"}