{"ast":null,"code":"var _jsxFileName = \"/home/missy/full_stack_open_course/part6/simple-notes/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from 'react-redux';\nimport NewNote from './components/NewNote';\nimport Note from './components/Note'; // dispatch({\n//   type: 'NEW_NOTE',\n//   data: {\n//     content: 'the app state is now in a redux store',\n//     important: true,\n//     id: 1,\n//   },\n// });\n// dispatch({\n//   type: 'NEW_NOTE',\n//   data: {\n//     content: 'we pass the dispatch action via the type attribute',\n//     important: true,\n//     id: 2,\n//   },\n// });\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const notes = useSelector(state => state);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NewNote, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(Note, {\n        content: note.content,\n        important: note.important,\n        id: note.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"ihnnmNxi8jnxm84dkaa9lQEex8I=\", false, function () {\n  return [useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/missy/full_stack_open_course/part6/simple-notes/src/App.js"],"names":["useSelector","NewNote","Note","App","notes","state","map","note","content","important","id"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AAEA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,IAAP,MAAiB,mBAAjB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,KAAK,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAV,CAAzB;AAEA,sBACE;AAAA,4BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGD,KAAK,CAACE,GAAN,CAAUC,IAAI,iBACb,QAAC,IAAD;AAEE,QAAA,OAAO,EAAEA,IAAI,CAACC,OAFhB;AAGE,QAAA,SAAS,EAAED,IAAI,CAACE,SAHlB;AAIE,QAAA,EAAE,EAAEF,IAAI,CAACG;AAJX;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAlBD;;GAAMP,G;UACUH,W;;;KADVG,G;AAoBN,eAAeA,GAAf","sourcesContent":["import { useSelector } from 'react-redux';\n\nimport NewNote from './components/NewNote';\nimport Note from './components/Note';\n\n// dispatch({\n//   type: 'NEW_NOTE',\n//   data: {\n//     content: 'the app state is now in a redux store',\n//     important: true,\n//     id: 1,\n//   },\n// });\n\n// dispatch({\n//   type: 'NEW_NOTE',\n//   data: {\n//     content: 'we pass the dispatch action via the type attribute',\n//     important: true,\n//     id: 2,\n//   },\n// });\n\nconst App = () => {\n  const notes = useSelector(state => state);\n\n  return (\n    <div>\n      <NewNote />\n      <ul>\n        {notes.map(note =>\n          <Note\n          \n            content={note.content}\n            important={note.important}\n            id={note.id} \n          />\n        )}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}