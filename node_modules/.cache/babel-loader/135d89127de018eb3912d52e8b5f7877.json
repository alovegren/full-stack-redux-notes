{"ast":null,"code":"const noteReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'NEW_NOTE':\n      console.log('reducer got a new note action!');\n      return [...state, action.data];\n\n    case 'TOGGLE_IMPORTANCE':\n      const id = action.data.id;\n      const noteToChange = state.find(n => n.id === id);\n      const changedNote = { ...noteToChange,\n        important: !noteToChange.important\n      };\n      return state.map(note => note.id === id ? changedNote : note);\n\n    default:\n      return state;\n  }\n};\n\nexport default noteReducer;","map":{"version":3,"sources":["/home/missy/full_stack_open_course/part6/simple-notes/src/reducers/noteReducer.js"],"names":["noteReducer","state","action","type","console","log","data","id","noteToChange","find","n","changedNote","important","map","note"],"mappings":"AAAA,MAAMA,WAAW,GAAG,YAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AAC1C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACA,aAAO,CAAC,GAAGJ,KAAJ,EAAWC,MAAM,CAACI,IAAlB,CAAP;;AACF,SAAK,mBAAL;AACE,YAAMC,EAAE,GAAGL,MAAM,CAACI,IAAP,CAAYC,EAAvB;AACA,YAAMC,YAAY,GAAGP,KAAK,CAACQ,IAAN,CAAWC,CAAC,IAAIA,CAAC,CAACH,EAAF,KAASA,EAAzB,CAArB;AACA,YAAMI,WAAW,GAAG,EAClB,GAAGH,YADe;AAElBI,QAAAA,SAAS,EAAE,CAACJ,YAAY,CAACI;AAFP,OAApB;AAKA,aAAOX,KAAK,CAACY,GAAN,CAAUC,IAAI,IACnBA,IAAI,CAACP,EAAL,KAAYA,EAAZ,GAAiBI,WAAjB,GAA+BG,IAD1B,CAAP;;AAGF;AACE,aAAOb,KAAP;AAhBJ;AAkBD,CAnBD;;AAqBA,eAAeD,WAAf","sourcesContent":["const noteReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'NEW_NOTE':\n      console.log('reducer got a new note action!')\n      return [...state, action.data];\n    case 'TOGGLE_IMPORTANCE':\n      const id = action.data.id;\n      const noteToChange = state.find(n => n.id === id);\n      const changedNote = {\n        ...noteToChange,\n        important: !noteToChange.important\n      };\n\n      return state.map(note => (\n        note.id === id ? changedNote : note\n      ));\n    default:\n      return state;\n  }\n}\n\nexport default noteReducer;"]},"metadata":{},"sourceType":"module"}