{"ast":null,"code":"var _jsxFileName = \"/home/missy/full_stack_open_course/part6/simple-notes/src/components/Note.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch } from 'react-redux';\nimport { toggleImportanceOf } from '../reducers/noteReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Note = note => {\n  _s();\n\n  const dispatch = useDispatch();\n\n  const toggleImportance = id => {\n    dispatch(toggleImportanceOf(id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    onClick: () => toggleImportance(note.id),\n    children: [note, note.content, \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: note.important ? 'important' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Note, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Note;\nexport default Note;\n\nvar _c;\n\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"sources":["/home/missy/full_stack_open_course/part6/simple-notes/src/components/Note.js"],"names":["useDispatch","toggleImportanceOf","Note","note","dispatch","toggleImportance","id","content","important"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,kBAAT,QAAmC,yBAAnC;;;AAEA,MAAMC,IAAI,GAAIC,IAAD,IAAU;AAAA;;AACrB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;;AAEA,QAAMK,gBAAgB,GAAGC,EAAE,IAAI;AAC7BF,IAAAA,QAAQ,CAACH,kBAAkB,CAACK,EAAD,CAAnB,CAAR;AACD,GAFD;;AAIA,sBACE;AAAI,IAAA,OAAO,EAAE,MAAMD,gBAAgB,CAACF,IAAI,CAACG,EAAN,CAAnC;AAAA,eACGH,IADH,EAEGA,IAAI,CAACI,OAFR,oBAEiB;AAAA,gBAASJ,IAAI,CAACK,SAAL,GAAiB,WAAjB,GAA+B;AAAxC;AAAA;AAAA;AAAA;AAAA,YAFjB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAbD;;GAAMN,I;UACaF,W;;;KADbE,I;AAeN,eAAeA,IAAf","sourcesContent":["import { useDispatch } from 'react-redux';\nimport { toggleImportanceOf } from '../reducers/noteReducer';\n\nconst Note = (note) => {\n  const dispatch = useDispatch();\n\n  const toggleImportance = id => {\n    dispatch(toggleImportanceOf(id));\n  };\n\n  return (\n    <li onClick={() => toggleImportance(note.id)}>\n      {note}\n      {note.content} <strong>{note.important ? 'important' : ''}</strong>\n    </li>\n  )\n}\n\nexport default Note;"]},"metadata":{},"sourceType":"module"}